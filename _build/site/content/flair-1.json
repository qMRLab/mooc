{"version":1,"kind":"Notebook","sha256":"81e148ae175836b4b81ff45323fe14e67c541bac80e87a571097c4a6ea608a06","slug":"flair-1","location":"/7 - Class Application Examples/1 T1 mapping/Notebooks/flair_1.ipynb","dependencies":[],"frontmatter":{"kernelspec":{"name":"python3","display_name":"mooc","language":"python"},"date":"2024-10-08","open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/qmrlab/mooc","subject":"mOOC","venue":{"title":"qMRLab"},"numbering":{"heading_1":{"enabled":true},"heading_2":{"enabled":true},"heading_3":{"enabled":true},"heading_4":{"enabled":true},"heading_5":{"enabled":true},"heading_6":{"enabled":true},"title":{"offset":1}},"keywords":["quantitative MRI","education"],"copyright":"NeuroPoly 2024","abbreviations":{"MRI":"Magnetic resonance imaging","MR":"Magnetic resonance","NMR":"Nuclear Magnetic Resonance","qMRI":"quantitative magnetic resonance imaging","GPT":"Generative Pre-trained Transformer","MRM":"Magnetic Resonance in Medicine","B0":"Main magnetic field","B1":"Radiofrequency field","FID":"Free Induction Decay","Gx":"X-axis gradient","Gy":"Y-axis gradient","Gz":"Z-axis gradient","TR":"Repetition Time","TE":"Echo Time","TI":"Inversion Time","CSF":"Cerebrospinal fluid","T1":"Longitudinal magnetization relaxation time constant","_T_{sub}`1`":"Longitudinal magnetization relaxation time constant","T2":"Transverse magnetization relaxation time constant","SE":"Spin Echo","GRE":"Gradient Echo","SPGR":"Spoiled Gradient Echo (sequence)","UMAP":"Uniform manifold approximation and projection","ADC":"Analog to digital converter","RF":"Radiofrequency","FA":"Flip Angle","VFA":"Variable Flip Angle","DESPOT1":"Driven Equilibrium Single Pulse Observation of _T_{sub}`1`","SNR":"Signal-to-noise ratio","RD-NLS":"reduced-dimension non-linear least-squares","STD":"Standard deviation","MT":"Magnetization Transfer","MTR":"Magnetization Transfer Ratio","MS":"Multiple Sclerosis","qMT":"Quantitative Magnetization Transfer","MTsat":"Magnetization Transfer saturation","SAR":"Specific absorption rate","FWHM":"Full width at half maximum"},"edit_url":"https://github.com/qmrlab/mooc/blob/mb/requirements/7 - Class Application Examples/1 T1 mapping/Notebooks/flair_1.ipynb","exports":[{"format":"ipynb","filename":"flair_1.ipynb","url":"/flair_1-0a7a3927158f8eddd70305f71059964f.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import nibabel as nib\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport sys\nfrom contextlib import contextmanager\nfrom repo2data.repo2data import Repo2Data\nfrom pathlib import Path\n\n@contextmanager\ndef suppress_stdout():\n    with open(os.devnull, \"w\") as devnull:\n        old_stdout = sys.stdout\n        sys.stdout = devnull\n        try:  \n            yield\n        finally:\n            sys.stdout = old_stdout\n\nwith suppress_stdout():\n    repo_path = Path(__file__).parents[2]\n    data_req_path = repo_path / \"binder\" / \"data_requirement.json\"\n    data_path = repo_path / '..' / \"data\"\n    dataset_path = data_path / \"qmrlab-mooc\"\n    \n    if not dataset_path.exists():\n        repo2data = Repo2Data(data_req_path)\n\ndata_dir = dataset_path / \"07-Applications\"\n# SPGR function\n\ndef spgr(constant, T1, T2, TR, TE, FA):\n    return (constant * ((1 - np.exp(-TR / T1)) / (1 - np.cos(FA) * np.exp(-TR / T1)))* np.sin(FA))*np.exp(-TE/T2)\n\ndef ir(constant, T1, T2, TR, TI, TE, FA):\n    return constant * ((1- np.cos(np.pi) * np.exp(-TR / T1)- (1 - np.cos(np.pi))* np.exp(-TI / T1))/ (1- np.cos(np.pi)* np.cos(FA)* np.exp(-TR / T1)))*np.sin(FA)*np.exp(-TE/T2)\n\nt1map = nib.load(data_dir / \"FLAIR - T1 map.nii.gz\").get_fdata()\n\n# Simulate a T2 map by dividing the T1 map by 10\nt2map = t1map / 10\n\n# Get all the (x, y) ints in a grid that fall within a circle int(5) diameter for a center at (112,163)\n#x, y = np.mgrid[:t1map.shape[0], :t1map.shape[1]]\n#mask = (x - 115)**2 + (y - 158)**2 < 2.6**2\nmask = nib.load('Mask.nii.gz').get_fdata()\nmask=np.squeeze(mask)\n# Introduce a circular lesion at 100 and 150\nt2map[mask!=0] = t2map[mask!=0]*2\nt1map[mask!=0] = t1map[mask!=0]*1.1\n\n# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 5000\nTE = 150\nFA = 90\nt2w=spgr(1, t1map, t2map, TR, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(np.rot90(t2w),cmap='grey')\nplt.clim(0, 0.7)\nplt.colorbar()\nplt.show()\n","identifier":"flair1jn-code","enumerator":"1","html_id":"flair1jn-code","key":"tZKFH3DZDQ"},{"type":"output","id":"ym9lrWb79nNqKzAo7c7v-","data":[],"identifier":"flair1jn-output","html_id":"flair1jn-output","key":"HWJ1jJ2U0x"}],"identifier":"flair1jn","label":"flair1jn","html_id":"flair1jn","key":"uxNBvz89Q8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T1-weighted spgr image using the T1 and T2 values voxel-wise\nTR = 500\nTE = 15\nFA = 70\nt1w=spgr(1, t1map, t2map, TR, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(np.rot90(t1w),cmap='grey')\nplt.clim(0, 0.6)\nplt.colorbar()\nplt.show()","identifier":"flair2jn-code","enumerator":"2","html_id":"flair2jn-code","key":"m8sEgcPkHg"},{"type":"output","id":"tr8cmSm4epxNNROwT9GYr","data":[],"identifier":"flair2jn-output","html_id":"flair2jn-output","key":"YCdaW0QqpZ"}],"identifier":"flair2jn","label":"flair2jn","html_id":"flair2jn","key":"Ed5rzIQlfa"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 5000\nTI = 50\nTE = 15\nFA = 90\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 1.5)\nplt.colorbar()\nplt.show()","identifier":"flair4ajn-code","enumerator":"3","html_id":"flair4ajn-code","key":"FJv4bPgyG2"},{"type":"output","id":"-G6j_2iKDv1oOznbd2ybX","data":[],"identifier":"flair4ajn-output","html_id":"flair4ajn-output","key":"BAk216bX0A"}],"identifier":"flair4ajn","label":"flair4ajn","html_id":"flair4ajn","key":"YeOUaxLIbD"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 5000\nTI = 500\nTE = 15\nFA = 90\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 1)\nplt.colorbar()\nplt.show()","identifier":"flair4bjn-code","enumerator":"4","html_id":"flair4bjn-code","key":"mOkonYAPNW"},{"type":"output","id":"CvAKOcjHBSHyF-x0YEkyo","data":[],"identifier":"flair4bjn-output","html_id":"flair4bjn-output","key":"UJjtDTcfss"}],"identifier":"flair4bjn","label":"flair4bjn","html_id":"flair4bjn","key":"sb97evoh8H"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 5000\nTI = 1000\nTE = 15\nFA = 90\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 1.2)\nplt.colorbar()\nplt.show()","identifier":"flair4cjn-code","enumerator":"5","html_id":"flair4cjn-code","key":"te372vykRK"},{"type":"output","id":"9DEKHYi7k_yCFS6p3fSNE","data":[],"identifier":"flair4cjn-output","html_id":"flair4cjn-output","key":"cDmFsug3T7"}],"identifier":"flair4cjn","label":"flair4cjn","html_id":"flair4cjn","key":"W3HslfRBKK"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 5000\nTI = 3000\nTE = 15\nFA = 90\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 1.2)\nplt.colorbar()\nplt.show()","identifier":"flair4djn-code","enumerator":"6","html_id":"flair4djn-code","key":"I3UwFzCzzK"},{"type":"output","id":"ciMcv1yjCCgUWCHiLeDZM","data":[],"identifier":"flair4djn-output","html_id":"flair4djn-output","key":"ODLp0R0QbI"}],"identifier":"flair4djn","label":"flair4djn","html_id":"flair4djn","key":"m2bPy8LhGs"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 10000\nTI = 3000\nTE = 150\nFA = 90\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 0.5)\nplt.colorbar()\nplt.show()","identifier":"flair5ajn-code","enumerator":"7","html_id":"flair5ajn-code","key":"U1y3jfTRjO"},{"type":"output","id":"W3_Mju0Hi6l872bNyJmQB","data":[],"identifier":"flair5ajn-output","html_id":"flair5ajn-output","key":"dH9oFCUX4G"}],"identifier":"flair5ajn","label":"flair5ajn","html_id":"flair5ajn","key":"hQXuGA6yaq"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 5000\nTI = 3000\nTE = 15\nFA = 20\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 0.4)\nplt.colorbar()\nplt.show()","identifier":"flair5bjn-code","enumerator":"8","html_id":"flair5bjn-code","key":"ErTnoVBU8F"},{"type":"output","id":"3Cf4Ls_1QPY0OVbB3mhV3","data":[],"identifier":"flair5bjn-output","html_id":"flair5bjn-output","key":"Zd6BaJHKPi"}],"identifier":"flair5bjn","label":"flair5bjn","html_id":"flair5bjn","key":"jN1X5tuM9U"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 1000\nTI = 3000\nTE = 120\nFA = 90\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 0.5)\nplt.colorbar()\nplt.show()","identifier":"flair5cjn-code","enumerator":"9","html_id":"flair5cjn-code","key":"N9D4ZmRznq"},{"type":"output","id":"ugB_5yWZsdG9rhNiixjZo","data":[],"identifier":"flair5cjn-output","html_id":"flair5cjn-output","key":"dfZ4XMoLPH"}],"identifier":"flair5cjn","label":"flair5cjn","html_id":"flair5cjn","key":"GnS0Z3s5c7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Simulate a T2-weighted spgr image using the T1 and T2 values voxel-wise, TR = 4000 ms, TE = 100 ms, and FA = 90 degrees\nTR = 10000\nTI = 3100\nTE = 1\nFA = 90\n\nflair=ir(1, t1map, t2map, TR, TI, TE, np.deg2rad(FA))\n\n# Plot the T2-weighted spgr image in black and white\nplt.imshow(abs(np.rot90(flair)),cmap='gray')\nplt.clim(0, 1.2)\nplt.colorbar()\nplt.show()","identifier":"flair5djn-code","enumerator":"10","html_id":"flair5djn-code","key":"u3mtnFdOnk"},{"type":"output","id":"gcRBjFd8EdCjqGezTIRZq","data":[],"identifier":"flair5djn-output","html_id":"flair5djn-output","key":"VSEzM5lmMZ"}],"identifier":"flair5djn","label":"flair5djn","html_id":"flair5djn","key":"amUMEcKuyn"}],"key":"j6GXMT1qo4"},"references":{"cite":{"order":[],"data":{}}}}