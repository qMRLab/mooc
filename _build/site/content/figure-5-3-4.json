{"version":1,"kind":"Notebook","sha256":"84cf2219f1350c52ab62fc9b11ba204acbac159117c6a6e9be686824f7fd1ec6","slug":"figure-5-3-4","location":"/5 B0 Mapping/3 Phase Unwrapping/Notebooks/Figure-5-3-4.ipynb","dependencies":[],"frontmatter":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"date":"2024-10-08","open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/qmrlab/mooc","subject":"mOOC","venue":{"title":"qMRLab"},"numbering":{"heading_1":{"enabled":true},"heading_2":{"enabled":true},"heading_3":{"enabled":true},"heading_4":{"enabled":true},"heading_5":{"enabled":true},"heading_6":{"enabled":true},"title":{"offset":1}},"keywords":["quantitative MRI","education"],"copyright":"NeuroPoly 2024","abbreviations":{"MRI":"Magnetic resonance imaging","MR":"Magnetic resonance","NMR":"Nuclear Magnetic Resonance","qMRI":"quantitative magnetic resonance imaging","GPT":"Generative Pre-trained Transformer","MRM":"Magnetic Resonance in Medicine","B0":"Main magnetic field","B1":"Radiofrequency field","FID":"Free Induction Decay","Gx":"X-axis gradient","Gy":"Y-axis gradient","Gz":"Z-axis gradient","TR":"Repetition Time","TE":"Echo Time","TI":"Inversion Time","CSF":"Cerebrospinal fluid","T1":"Longitudinal magnetization relaxation time constant","_T_{sub}`1`":"Longitudinal magnetization relaxation time constant","T2":"Transverse magnetization relaxation time constant","SE":"Spin Echo","GRE":"Gradient Echo","SPGR":"Spoiled Gradient Echo (sequence)","UMAP":"Uniform manifold approximation and projection","ADC":"Analog to digital converter","RF":"Radiofrequency","FA":"Flip Angle","VFA":"Variable Flip Angle","DESPOT1":"Driven Equilibrium Single Pulse Observation of _T_{sub}`1`","SNR":"Signal-to-noise ratio","RD-NLS":"reduced-dimension non-linear least-squares","STD":"Standard deviation","MT":"Magnetization Transfer","MTR":"Magnetization Transfer Ratio","MS":"Multiple Sclerosis","qMT":"Quantitative Magnetization Transfer","MTsat":"Magnetization Transfer saturation","SAR":"Specific absorption rate","FWHM":"Full width at half maximum"},"edit_url":"https://github.com/qmrlab/mooc/blob/mb/requirements/5 B0 Mapping/3 Phase Unwrapping/Notebooks/Figure-5-3-4.ipynb","exports":[{"format":"ipynb","filename":"Figure-5-3-4.ipynb","url":"/Figure-5-3-4-bc2e08a2485c13bd8963d306fe8c7385.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Prepare Python environment\nimport numpy as np\nimport plotly.express as px\nimport os\nimport nibabel as nib\nimport numpy as np\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport math\nfrom sklearn.linear_model import LinearRegression\nfrom dash import Dash, dcc, html\nimport pandas as pd\nPI_UNICODE = \"\\U0001D70B\"\nGYRO_BAR_RATIO_H = 42.6e6  # [Hz/T]\n\nseed = 2\nnp.random.seed(seed)\nn_points = 20\nlen_x = 500\nlen_y = 500\nmap = np.zeros([len_x, len_y]) - math.pi\nx, y = np.meshgrid(range(len_x), range(len_y))\n\ndef gauss(a, std_x, std_y, center):\n    x0 = int(center[0] * len_x)\n    y0 = int(center[1] * len_y)\n    return a * np.exp(-((((x-x0)**2)/(std_x**2)) + (((y-y0)**2)/(std_y**2))))\n\n\nfor i_point in range(n_points):\n    point = (np.random.uniform(), np.random.uniform())\n    amp = np.random.randint(4, 9)\n    std_x = np.random.randint(50, 100)\n    std_y = np.random.randint(50, 100)\n    map += gauss(amp, std_x, std_y, point)\n\nwrapped = np.angle(np.exp(1j*map))\n\nfig = make_subplots(rows=1, cols=2, shared_xaxes=False, horizontal_spacing=0.2, subplot_titles=(\"Wrapped\", \"Unwrapped\"), specs=[[{\"type\": \"Heatmap\"}, {\"type\": \"Heatmap\"}]])\nfig.add_trace(go.Heatmap(z=wrapped, colorscale='gray', colorbar_x=0.47, colorbar=dict(title=\"Rad\", titleside=\"top\", tickmode=\"array\", tickvals=[-math.pi, 0, math.pi], ticktext = [f'-{PI_UNICODE}', 0, f'{PI_UNICODE}'])), 1, 1)\nfig.add_trace(go.Heatmap(z=map, colorscale='gray', colorbar=dict(title=\"Rad\", titleside=\"top\", tickmode=\"array\",\n                                                                 tickvals=[-2*math.pi, 0, 2*math.pi, 4*math.pi, 6*math.pi, 8*math.pi, 10*math.pi, 12*math.pi, 14*math.pi],\n                                                                 ticktext = [f'-2{PI_UNICODE}', 0, f'2{PI_UNICODE}', f'4{PI_UNICODE}', f'6{PI_UNICODE}', f'8{PI_UNICODE}', f'10{PI_UNICODE}', f'12{PI_UNICODE}', f'14{PI_UNICODE}'])), 1, 2)\nfig.update_layout({\"height\": 400, \"width\": 750})\nfig.update_xaxes(showticklabels=False)\nfig.update_yaxes(showticklabels=False)\nfig.show()","identifier":"b0fig13jn-code","enumerator":"1","html_id":"b0fig13jn-code","key":"YIYT8YPp0o"},{"type":"output","id":"VvNAs733nik9w6ZyvgvBK","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.plotly.v1+json":{"content_type":"application/vnd.plotly.v1+json","hash":"0f05722b77130fb76cadcad6797a26ff","path":"/0f05722b77130fb76cadcad6797a26ff.json"}}}],"identifier":"b0fig13jn-output","html_id":"b0fig13jn-output","key":"NdmFzBElKt"}],"identifier":"b0fig13jn","label":"b0Fig13jn","html_id":"b0fig13jn","key":"oJTYUiN0kz"}],"key":"D4yqVmbGlQ"},"references":{"cite":{"order":[],"data":{}}}}