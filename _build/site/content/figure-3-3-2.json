{"version":1,"kind":"Notebook","sha256":"dc7f41c5d716b10d395b6a3f1291c9130b0c8c6441607cf62b9a6e37ecce22fa","slug":"figure-3-3-2","location":"/3 T2 Mapping/03-Multiexponential T2 Mapping/Notebooks/Figure-3-3-2.ipynb","dependencies":[],"frontmatter":{"kernelspec":{"name":"python3","display_name":"mooc","language":"python"},"date":"2024-10-08","open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/qmrlab/mooc","subject":"mOOC","venue":{"title":"qMRLab"},"numbering":{"heading_1":{"enabled":true},"heading_2":{"enabled":true},"heading_3":{"enabled":true},"heading_4":{"enabled":true},"heading_5":{"enabled":true},"heading_6":{"enabled":true},"title":{"offset":1}},"keywords":["quantitative MRI","education"],"copyright":"NeuroPoly 2024","abbreviations":{"MRI":"Magnetic resonance imaging","MR":"Magnetic resonance","NMR":"Nuclear Magnetic Resonance","qMRI":"quantitative magnetic resonance imaging","GPT":"Generative Pre-trained Transformer","MRM":"Magnetic Resonance in Medicine","B0":"Main magnetic field","B1":"Radiofrequency field","FID":"Free Induction Decay","Gx":"X-axis gradient","Gy":"Y-axis gradient","Gz":"Z-axis gradient","TR":"Repetition Time","TE":"Echo Time","TI":"Inversion Time","CSF":"Cerebrospinal fluid","T1":"Longitudinal magnetization relaxation time constant","_T_{sub}`1`":"Longitudinal magnetization relaxation time constant","T2":"Transverse magnetization relaxation time constant","SE":"Spin Echo","GRE":"Gradient Echo","SPGR":"Spoiled Gradient Echo (sequence)","UMAP":"Uniform manifold approximation and projection","ADC":"Analog to digital converter","RF":"Radiofrequency","FA":"Flip Angle","VFA":"Variable Flip Angle","DESPOT1":"Driven Equilibrium Single Pulse Observation of _T_{sub}`1`","SNR":"Signal-to-noise ratio","RD-NLS":"reduced-dimension non-linear least-squares","STD":"Standard deviation","MT":"Magnetization Transfer","MTR":"Magnetization Transfer Ratio","MS":"Multiple Sclerosis","qMT":"Quantitative Magnetization Transfer","MTsat":"Magnetization Transfer saturation","SAR":"Specific absorption rate","FWHM":"Full width at half maximum"},"edit_url":"https://github.com/qmrlab/mooc/blob/mb/requirements/3 T2 Mapping/03-Multiexponential T2 Mapping/Notebooks/Figure-3-3-2.ipynb","exports":[{"format":"ipynb","filename":"Figure-3-3-2.ipynb","url":"/Figure-3-3-2-5de1a85f3ba73b930467600c005be7f3.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Prepare Python environment\nimport numpy as np\nimport scipy.io as sio\nfrom pathlib import Path\nimport os\nimport sys\nfrom contextlib import contextmanager\nfrom repo2data.repo2data import Repo2Data\n\n@contextmanager\ndef suppress_stdout():\n    with open(os.devnull, \"w\") as devnull:\n        old_stdout = sys.stdout\n        sys.stdout = devnull\n        try:  \n            yield\n        finally:\n            sys.stdout = old_stdout\n\nwith suppress_stdout():\n    repo_path = Path(os.path.abspath('')).parents[2]\n    data_req_path = repo_path / \"binder\" / \"data_requirement.json\"\n    data_path = repo_path / '..' / \"data\"\n    dataset_path = data_path / \"qmrlab-mooc\"\n    \n    if not dataset_path.exists():\n        repo2data = Repo2Data(data_req_path)\n\ndata_dir = dataset_path / \"03-T2\"\ndata_file = \"multiexpo_T2_image.mat\"\n\n#Load either archived or generated plot variables\nmat_contents = sio.loadmat(data_dir / data_file)\n\n# Get MATLAB data\n\n# Input MET2 data with different TE values\nME_TE_1 = mat_contents['ME_TE_1']\nME_TE_2 = mat_contents['ME_TE_2']\nME_TE_3 = mat_contents['ME_TE_3']\nME_TE_4 = mat_contents['ME_TE_4']\nME_TE_4 = mat_contents['ME_TE_4']\n\n\n# Output MWF, IEW and MW maps from qMRLab simulation\nMWF_map = mat_contents['MWF']\nT2MW_map = mat_contents['T2MW']\nT2IEW_map = mat_contents['T2IEW']\n\n## Plot\nimport matplotlib.pyplot as plt\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nimport numpy as np\nfrom chart_studio.plotly import plot\nfrom IPython.display import display, HTML\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\nconfig = {'showLink': False, 'displayModeBar': False}\n\nxAxis = np.arange(0, MWF_map.shape[1])\nyAxis = np.arange(0, MWF_map.shape[0])\n\ntrace1 = go.Heatmap(x=xAxis,\n                    y=yAxis,\n                    z=ME_TE_1,\n                    colorscale='Gray',\n                    showscale=False,\n                    visible=False,\n                    name='Signal')\ntrace2 = go.Heatmap(x=xAxis,\n                    y=yAxis,\n                    z=ME_TE_2,\n                    colorscale='Gray',\n                    showscale=False,\n                    visible=False,\n                    name='Signal')\ntrace3 = go.Heatmap(x=xAxis,\n                    y=yAxis,\n                    z=ME_TE_3,\n                    colorscale='Gray',\n                    showscale=False,\n                    visible=True,\n                    name='Signal')\ntrace4 = go.Heatmap(x=xAxis,\n                    y=yAxis,\n                    z=ME_TE_4,\n                    colorscale='Gray',\n                    visible=False,\n                    showscale=False,\n                    name='Signal')\ntrace5 = go.Heatmap(x=xAxis,\n                    y=yAxis,\n                    z=MWF_map,\n                    colorscale='Portland',\n                    xaxis='x2',\n                    yaxis='y2',\n                    visible=True,\n                    name='MWF',\n                    zmin=25,\n                    zmax=55)\ntrace6 = go.Heatmap(x=xAxis,\n                    y=yAxis,\n                    z=T2IEW_map,\n                    colorscale='Portland',\n                    xaxis='x2',\n                    yaxis='y2',\n                    visible=False,\n                    name='T2 IEW (ms)',\n                    zmin=40,\n                    zmax=100)\ntrace7 = go.Heatmap(x=xAxis,\n                    y=yAxis,\n                    z=T2MW_map,\n                    colorscale='Portland',\n                    xaxis='x2',\n                    yaxis='y2',\n                    visible=False,\n                    name='T2 MW (ms)',\n                    zmin=15,\n                    zmax=40)\n\ndata = [trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\nupdatemenus = [\n    dict(\n        active=2,\n        x=0.12,\n        xanchor='left',\n        y=-0.15,\n        yanchor='bottom',\n        direction='up',\n        font=dict(family='Times New Roman', size=16),\n        buttons=[\n            dict(label='12.8 ms',\n                 method='update',\n                 args=[{'visible': [True, False, False, False, trace5['visible'], trace6['visible'], trace7['visible']]}]),\n            dict(label='128 ms',\n                 method='update',\n                 args=[{'visible': [False, True, False, False, trace5['visible'], trace6['visible'], trace7['visible']]}]),\n            dict(label='256 ms',\n                 method='update',\n                 args=[{'visible': [False, False, True, False, trace5['visible'], trace6['visible'], trace7['visible']]}]),\n            dict(label='384 ms',\n                 method='update',\n                 args=[{'visible': [False, False, False, True, trace5['visible'], trace6['visible'], trace7['visible']]}])\n        ],\n    ),\n    dict(\n        x=0.7,\n        xanchor='left',\n        y=-0.15,\n        yanchor='bottom',\n        direction='up',\n        font=dict(family='Times New Roman', size=16),\n        buttons=[\n            dict(label='MWF',\n                 method='update',\n                 args=[{'visible': [trace1['visible'], trace2['visible'], trace3['visible'], trace4['visible'], True, False, False]},\n                       {'annotations': [\n                           dict(\n                               x=0.19,\n                               y=1.15,\n                               showarrow=False,\n                               text='MET2w',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=0.85,\n                               y=1.15,\n                               showarrow=False,\n                               text='MWF map',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=1.17,\n                               y=1.15,\n                               showarrow=False,\n                               text='T<sub>2</sub> (ms)',\n                               font=dict(family='Times New Roman', size=26),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=0.02,\n                               y=-0.15,\n                               showarrow=False,\n                               text='TE:',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                       ]}]),\n            dict(label='T2 IEW',\n                 method='update',\n                 args=[{'visible': [trace1['visible'], trace2['visible'], trace3['visible'], trace4['visible'], False, True, False]},\n                       {'annotations': [\n                           dict(\n                               x=0.19,\n                               y=1.15,\n                               showarrow=False,\n                               text='MET2w',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=0.95,\n                               y=1.25,\n                               showarrow=False,\n                               text='T2 map for<br>Intra/Extracellular Water',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=1.17,\n                               y=1.15,\n                               showarrow=False,\n                               text='T<sub>2</sub> (ms)',\n                               font=dict(family='Times New Roman', size=26),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=0.02,\n                               y=-0.15,\n                               showarrow=False,\n                               text='TE:',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                       ]}]),\n            dict(label='T2 MW',\n                 method='update',\n                 args=[{'visible': [trace1['visible'], trace2['visible'], trace3['visible'], trace4['visible'], False, False, True]},\n                       {'annotations': [\n                           dict(\n                               x=0.19,\n                               y=1.15,\n                               showarrow=False,\n                               text='MET2w',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=0.86,\n                               y=1.25,\n                               showarrow=False,\n                               text='T2 map for<br>Myelin Water',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=1.17,\n                               y=1.15,\n                               showarrow=False,\n                               text='T<sub>2</sub> (ms)',\n                               font=dict(family='Times New Roman', size=26),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                           dict(\n                               x=0.02,\n                               y=-0.15,\n                               showarrow=False,\n                               text='TE:',\n                               font=dict(family='Times New Roman', size=22),\n                               xref='paper',\n                               yref='paper'\n                           ),\n                       ]}])\n        ],\n    ),\n]\n\nlayout = dict(\n    width=728,\n    height=448.5,\n    margin=dict(\n        t=90,\n        r=140,\n        b=90,\n        l=30),\n    annotations=[\n        dict(\n            x=0.19,\n            y=1.15,\n            showarrow=False,\n            text='MET2w',\n            font=dict(\n                family='Times New Roman',\n                size=22\n            ),\n            xref='paper',\n            yref='paper'\n        ),\n        dict(\n            x=0.85,\n            y=1.15,\n            showarrow=False,\n            text='MWF map',  # Default title, will change with dropdown selection\n            font=dict(\n                family='Times New Roman',\n                size=22\n            ),\n            xref='paper',\n            yref='paper'\n        ),\n        dict(\n            x=1.17,\n            y=1.15,\n            showarrow=False,\n            text='T<sub>2</sub> (ms)',\n            font=dict(\n                family='Times New Roman',\n                size=26\n            ),\n            xref='paper',\n            yref='paper'\n        ),\n        dict(\n            x=0.02,\n            y=-0.15,\n            showarrow=False,\n            text='TE:',\n            font=dict(\n                family='Times New Roman',\n                size=22\n            ),\n            xref='paper',\n            yref='paper'\n        ),\n    ],\n    xaxis=dict(range=[0, xAxis[-1]], autorange=False,\n               showgrid=False, zeroline=False, showticklabels=False,\n               ticks='', domain=[0, 0.5]),  # First plot domain\n    yaxis=dict(range=[0, yAxis[-1]], autorange=False,\n               showgrid=False, zeroline=False, showticklabels=False,\n               ticks='', domain=[0, 1]),\n    xaxis2=dict(range=[0, xAxis[-1]], autorange=False,\n                showgrid=False, zeroline=False, showticklabels=False,\n                ticks='', domain=[0.5, 1]),  # Second plot domain\n    yaxis2=dict(range=[0, yAxis[-1]], autorange=False,\n                showgrid=False, zeroline=False, showticklabels=False,\n                ticks='', domain=[0, 1], anchor='x2'),\n    showlegend=False,\n    autosize=False,\n    updatemenus=updatemenus\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig, filename='ir_fig_2.html', config=config)\n","identifier":"t2fig5jn-code","enumerator":"1","html_id":"t2fig5jn-code","key":"zWGhZLy7UW"},{"type":"output","id":"smoywqXTe-VdAJWOY0gmE","data":[],"identifier":"t2fig5jn-output","html_id":"t2fig5jn-output","key":"y4vJHIQU8W"}],"identifier":"t2fig5jn","label":"t2Fig5jn","html_id":"t2fig5jn","key":"XCtordFOLZ"}],"key":"cPZdBpsRql"},"references":{"cite":{"order":[],"data":{}}}}