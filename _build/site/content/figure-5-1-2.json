{"version":1,"kind":"Notebook","sha256":"45d2bf7914d66bb79e45c19e790966d710c2c2e2820f8bcb864e292bbece26b0","slug":"figure-5-1-2","location":"/5 B0 Mapping/1 B0 Inhomogeneities/Notebooks/Figure-5-1-2.ipynb","dependencies":[],"frontmatter":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"date":"2024-10-08","open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/qmrlab/mooc","subject":"mOOC","venue":{"title":"qMRLab"},"numbering":{"heading_1":{"enabled":true},"heading_2":{"enabled":true},"heading_3":{"enabled":true},"heading_4":{"enabled":true},"heading_5":{"enabled":true},"heading_6":{"enabled":true},"title":{"offset":1}},"keywords":["quantitative MRI","education"],"copyright":"NeuroPoly 2024","abbreviations":{"MRI":"Magnetic resonance imaging","MR":"Magnetic resonance","NMR":"Nuclear Magnetic Resonance","qMRI":"quantitative magnetic resonance imaging","GPT":"Generative Pre-trained Transformer","MRM":"Magnetic Resonance in Medicine","B0":"Main magnetic field","B1":"Radiofrequency field","FID":"Free Induction Decay","Gx":"X-axis gradient","Gy":"Y-axis gradient","Gz":"Z-axis gradient","TR":"Repetition Time","TE":"Echo Time","TI":"Inversion Time","CSF":"Cerebrospinal fluid","T1":"Longitudinal magnetization relaxation time constant","_T_{sub}`1`":"Longitudinal magnetization relaxation time constant","T2":"Transverse magnetization relaxation time constant","SE":"Spin Echo","GRE":"Gradient Echo","SPGR":"Spoiled Gradient Echo (sequence)","UMAP":"Uniform manifold approximation and projection","ADC":"Analog to digital converter","RF":"Radiofrequency","FA":"Flip Angle","VFA":"Variable Flip Angle","DESPOT1":"Driven Equilibrium Single Pulse Observation of _T_{sub}`1`","SNR":"Signal-to-noise ratio","RD-NLS":"reduced-dimension non-linear least-squares","STD":"Standard deviation","MT":"Magnetization Transfer","MTR":"Magnetization Transfer Ratio","MS":"Multiple Sclerosis","qMT":"Quantitative Magnetization Transfer","MTsat":"Magnetization Transfer saturation","SAR":"Specific absorption rate","FWHM":"Full width at half maximum"},"edit_url":"https://github.com/qmrlab/mooc/blob/mb/requirements/5 B0 Mapping/1 B0 Inhomogeneities/Notebooks/Figure-5-1-2.ipynb","exports":[{"format":"ipynb","filename":"Figure-5-1-2.ipynb","url":"/Figure-5-1-2-9325b01d246d01891fd0e0899a9965fc.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Prepare Python environment\n\nimport scipy.io as sio\nfrom pathlib import Path\n\ndata_dir = Path(\"../../../data/05-B0/data/fmap\")\n\nimport math\nimport json\nimport nibabel as nib\nimport numpy as np\nfrom numpy.fft import ifftn, fftn, ifft, fftshift, ifftshift\nimport os\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom scipy.signal import butter, lfilter, freqz, filtfilt\nfrom scipy.io import loadmat\nimport warnings\nPI_UNICODE = \"\\U0001D70B\"\nCHI_UNICODE = \"\\U0001D712\"\nMICRO_UNICODE = \"\\u00B5\"\nGYRO_BAR_RATIO_H = 42.6e6  # [Hz/T]\ndef dipole_kernel(b0_dir, voxel_size, n_voxels):\n    \"\"\" Create a dipole kernel\n    dipole kernel: (3*cos(theta)**2 - 1) / (4*pi*r**3)\n                => (3*r**2*cos(theta)**2 - r**2) / (4*pi*r**5)\n                => (3*b0_dir**2 - r**2) / (4*pi*r**2**2.5)\n\n        Function inspired and derived from: https://onlinelibrary.wiley.com/doi/10.1002/mrm.28716\n    \"\"\"\n    eps = 0.00001\n    x, y, z = np.meshgrid(range(round(-n_voxels[0]/2+0.5), round(n_voxels[0]/2+0.5)), range(round(-n_voxels[1]/2+0.5), round(n_voxels[1]/2+0.5)), range(round(-n_voxels[2]/2+0.5), round(n_voxels[2]/2+0.5)), indexing='ij')\n\n    x = x * voxel_size[0] + eps\n    y = y * voxel_size[1] + eps\n    z = z * voxel_size[2] + eps\n\n    r2 = (x**2 + y**2 + z**2)\n\n    d = np.prod(voxel_size) * ( 3 * ((x*b0_dir[0] + y*b0_dir[1] + z*b0_dir[2])**2) - r2 ) / (4 * math.pi * r2**2.5)\n\n    d[np.isnan(d)] = eps\n    D = np.real(fftshift(fftn(ifftshift(d))))\n\n    mid_voxel = n_voxels[0]//2\n    return d[n_voxels[1]//2], D[n_voxels[1]//2]\n\nb0_dir = (0, 0, 1)\nvoxel_size = np.array((1, 1, 1)) * 1e-3\nn_voxels = (201,201,201)\nd, D = dipole_kernel(b0_dir, voxel_size, n_voxels)\n\nfig = go.Figure()\nfig = make_subplots(rows=1, cols=2, shared_xaxes=False, horizontal_spacing=0.13, vertical_spacing = 0.12, subplot_titles=(\"Dipole Kernel (d)\", \"Dipole Kernel (D)\"), specs=[[{\"type\": \"Heatmap\"}, {\"type\": \"Heatmap\"}]])\nfig.add_trace(go.Heatmap(z=d, colorscale='gray', showscale=False, zmin=-1e-6, zmax=1e-6))\nfig.add_trace(go.Heatmap(z=D, colorscale='gray', showscale=False), 1, 2)\nfig.update_xaxes(showticklabels=False)\nfig.update_yaxes(showticklabels=False)\nfig.update_layout(\n    height=400,\n    width=750)\nfig.show()","identifier":"b0fig2jn-code","enumerator":"1","html_id":"b0fig2jn-code","key":"i1lGRBLJk7"},{"type":"output","id":"8ysYOoIC4CLEsL7AarAUQ","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.plotly.v1+json":{"content_type":"application/vnd.plotly.v1+json","hash":"af7cf19929a9b2e9313d9091d9d48629","path":"/af7cf19929a9b2e9313d9091d9d48629.json"}}}],"identifier":"b0fig2jn-output","html_id":"b0fig2jn-output","key":"gViSI4oVRw"}],"identifier":"b0fig2jn","label":"b0Fig2jn","html_id":"b0fig2jn","key":"Md2VWDMaB4"}],"key":"NfOtPYuviR"},"references":{"cite":{"order":[],"data":{}}}}